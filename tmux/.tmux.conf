set -g default-terminal "tmux-256color" # set term var inside tmux, https://github.com/tmux/tmux/issues/1246
set -ga terminal-overrides ",*256col*:Tc" # use true color in tmux

set-option -g focus-events on # got this "advice" from nvim health-check
set-option -g base-index 1 # start windows numbering at 1 instead of 0
set-option -g escape-time 10 # remove escape delay, interfears with vim (have to be > 0 for WSL)
set-option -g prefix C-Space # set the prefix to Control Space
set-option -g automatic-rename on # automatically rename windows
set-option -g renumber-windows on # automatically renumber windows

set-window-option -g mode-keys vi # use vi keybindings
set-window-option -g pane-base-index 1 # make pane numbering start at 1 instead of 0

bind-key r source-file ~/.tmux.conf \; display 'Config Reloaded!' # bind r to refresh config

bind-key '|' split-window -h # split vertical with |
bind-key '_' split-window -v # split horizontal with _
unbind-key '"' # unbind default split key
unbind-key % # unbind default split key

bind-key C-Space send-prefix # resend the prefix if a is pressed after prefix, inception
bind-key C-Space last-window # when repeating prefix, switch to last window
unbind-key C-b # unbund default prefix


bind-key -T copy-mode-vi 'v' send -X begin-selection # mimic vim visual selection
bind-key -T copy-mode-vi 'y' send -X copy-selection # mimic vim copy selection

bind-key h select-pane -L # move between panes like in vim
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key -r '+' resize-pane -U 10 # resize panes like splits in vim, -r flag makes it repeatable
bind-key -r '-' resize-pane -D 10
bind-key -r '<' resize-pane -L 10
bind-key -r '>' resize-pane -R 10


# Statusbar
set -g status-interval 2
set -g status-left-length 100
set -g status-right-length 100

node_version="#(node --version)"
is_node_dir="#(ls #{pane_current_path} | grep -c "package.json")"
node_status="#{?$is_node_dir,(node $node_version),}"

git_is_git_dir="#(git -C '#{pane_current_path}' rev-parse --git-dir)" # might change to --is-inside-worktree
git_has_changes="#(git -C '#{pane_current_path}' diff --shortstat)"
git_branch="#(git -C '#{pane_current_path}' rev-parse --abbrev-ref HEAD)"
git_changes="#{?$git_has_changes,dirty,clean}"
status_git="#{?$git_is_git_dir,($git_branch $git_changes),}"

set -g status-right  "$node_status $status_git \"#{=22:pane_title}\" %H:%M %d-%b-%y"

